{"version":3,"sources":["components/Product/Product.js","components/Product/ProductList.js","components/Cart/Cart.js","components/Cart/CartList.js","components/Mart.js","App.js","store/MarketStore.js","index.js"],"names":["inject","addProduct","market","observer","id","name","price","console","log","inline","value","readOnly","onClick","products","ProductList","map","item","React","memo","Cart","count","func","marketBasket","delProduct","style","paddingTop","totalCost","marketStore","add","find","basket","push","filter","makeObservable","this","observable","action","computed","reduce","acc","curr","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef8d3e5a.chunk.js","sourcesContent":["import { Button, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\n// App.js 에서 props로 내린 market을 자손이 사용\r\nfunction Product({ id, name, price, addProduct }) {\r\n  console.log(\"Product.js\");\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <FormGroup inline>\r\n          <Label>제품명</Label>\r\n          <Input value={name} readOnly />\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <Label>가격</Label>\r\n          <Input value={price} readOnly />\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <Row>\r\n          <Label>기능</Label>\r\n        </Row>\r\n        <Row>\r\n          <Button\r\n            onClick={() =>\r\n              addProduct({\r\n                id,\r\n                name,\r\n                price,\r\n              })\r\n            }\r\n          >\r\n            담기\r\n          </Button>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\n// export default observer(Product);\r\nexport default inject(({ market }) => ({\r\n  addProduct: market.addProduct,\r\n}))(observer(Product));\r\n","// import { inject, observer } from \"mobx-react\";\r\nimport React from \"react\";\r\nimport Product from \"./Product\";\r\n\r\nconst products = [\r\n  {\r\n    id: \"p1\",\r\n    name: \"새우깡\",\r\n    price: 1300,\r\n  },\r\n  {\r\n    id: \"p2\",\r\n    name: \"우유\",\r\n    price: 1000,\r\n  },\r\n  {\r\n    id: \"p3\",\r\n    name: \"허니 버터 칩\",\r\n    price: 1600,\r\n  },\r\n  {\r\n    id: \"p4\",\r\n    name: \"썬칩\",\r\n    price: 1600,\r\n  },\r\n  {\r\n    id: \"p5\",\r\n    name: \"홈런볼\",\r\n    price: 1100,\r\n  },\r\n];\r\n\r\n// function ProductList(props) {\r\nfunction ProductList() {\r\n  console.log(\"ProductList.js\");\r\n  return (\r\n    <div>\r\n      {products.map((item) => {\r\n        return (\r\n          <Product\r\n            key={item.id}\r\n            id={item.id}\r\n            name={item.name}\r\n            price={item.price}\r\n            // {...props}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProductList);\r\n","import React from \"react\";\r\nimport { Row, Col, FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\n// memo로 변하는 목록만 렌더링\r\nfunction Cart({ id, name, price, count, func }) {\r\n  console.log(\"Cart.js\");\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <FormGroup inline>\r\n          <Label>제품명</Label>\r\n          <Input value={name} readOnly />\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <FormGroup>\r\n          <Label>가격</Label>\r\n          <Input value={price} readOnly />\r\n        </FormGroup>\r\n      </Col>\r\n      <Col>\r\n        <Label>개수</Label>\r\n        <Input value={count} readOnly />\r\n      </Col>\r\n      <Col>\r\n        <Row>\r\n          <Label>기능</Label>\r\n        </Row>\r\n        <Row>\r\n          <Button onClick={() => func({ id })}>지우기</Button>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default React.memo(Cart);\r\n","import { inject, observer } from \"mobx-react\";\r\nimport Cart from \"./Cart\";\r\n\r\nfunction CartList({ market }) {\r\n  console.log(\"CartList.js\");\r\n  return (\r\n    <div>\r\n      {market.marketBasket &&\r\n        market.marketBasket.map((item) => {\r\n          return (\r\n            <Cart\r\n              key={item.id}\r\n              id={item.id}\r\n              name={item.name}\r\n              price={item.price}\r\n              count={item.count}\r\n              func={market.delProduct}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default CartList;\r\nexport default inject(\"market\")(observer(CartList));\r\n","import {\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,\r\n  Col,\r\n  Container,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport ProductList from \"./Product/ProductList\";\r\nimport CartList from \"./Cart/CartList\";\r\nimport { inject, observer } from \"mobx-react\";\r\n\r\n// export때 observer 감싸주기\r\n// function Mart(props) {\r\n\r\nconst Mart = ({ market }) => {\r\n  console.log(\"Mart.js\");\r\n  return (\r\n    <Container style={{ paddingTop: \"30px\" }}>\r\n      <Row>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <h3>상품목록</h3>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <ProductList />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n        <Col>\r\n          <Card>\r\n            <CardHeader>\r\n              <h3>장바구니</h3>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <CartList />\r\n            </CardBody>\r\n            <CardFooter>Total : {market.totalCost}</CardFooter>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\n// export default observer(Mart);\r\nexport default inject(\"market\")(observer(Mart));\r\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport { Provider } from \"mobx-react\";\nimport Mart from \"./components/Mart\";\nimport MarketStore from \"./store/MarketStore\";\n\n// 스토어 생성\nconst marketStore = new MarketStore();\n\nfunction App() {\n  return (\n    <Provider className=\"App\" market={marketStore}>\n      <Mart />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { action, computed, makeObservable, observable } from \"mobx\";\r\n\r\nclass MarketStore {\r\n  // state\r\n  marketBasket = [];\r\n  // 선언부\r\n  constructor() {\r\n    makeObservable(this, {\r\n      marketBasket: observable,\r\n      addProduct: action,\r\n      delProduct: action,\r\n      totalCost: computed,\r\n    });\r\n  }\r\n  // action\r\n  addProduct = ({ id, name, price }) => {\r\n    const add = this.marketBasket.find((basket) => id === basket.id);\r\n    if (!add) {\r\n      this.marketBasket.push({\r\n        id,\r\n        name,\r\n        price,\r\n        count: 1,\r\n      });\r\n    } else {\r\n      add.count++;\r\n    }\r\n  };\r\n  delProduct = ({ id }) => {\r\n    this.marketBasket = this.marketBasket.filter((basket) => basket.id !== id);\r\n  };\r\n  // computed\r\n  get totalCost() {\r\n    return this.marketBasket.reduce(\r\n      (acc, curr) => acc + curr.price * curr.count,\r\n      0\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarketStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}